<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.multibit.merchant</groupId>
  <artifactId>mbm-parent</artifactId>
  <version>develop-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>MultiBit Merchant Parent</name>
  <description>The parent POM for MultiBit Merchant providing common dependencies and reactor build configuration
  </description>
  <inceptionYear>2012</inceptionYear>

  <modules>
    <module>mbm</module>
    <module>common/mbm-hal</module>
    <module>common/mbm-client</module>
    <module>common/mbm-testing</module>
  </modules>

  <!-- Entries listed here occur more than once in the POM -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <atmosphere.version>0.8.0-RC3</atmosphere.version>
    <dropwizard.version>0.5.1</dropwizard.version>
    <spring.version>3.1.0.M2</spring.version>
    <spring-social.version>1.0.0.RELEASE</spring-social.version>
    <slf4j.version>1.6.1</slf4j.version>
    <logback.version>1.0.6</logback.version>
    <bitcoinj.version>0.7.1</bitcoinj.version>
  </properties>

  <developers>
    <developer>
      <name>Gary Rowe</name>
      <email>g.rowe@froot.co.uk</email>
      <timezone>0</timezone>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>MIT</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://github.com/gary-rowe/MultiBitMerchant.git</connection>
    <developerConnection>scm:git:git@github.com:gary-rowe/MultiBitMerchant.git</developerConnection>
    <url>http://github.com/gary-rowe/MultiBitMerchant/</url>
    <tag>develop-SNAPSHOT</tag>
  </scm>

  <issueManagement>
    <system>github</system>
    <url>http://github.com/gary-rowe/MultiBitMerchant/issues#issue/</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>releases</id>
      <url>http://nexus.bitcoinj.org/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <url>http://nexus.bitcoinj.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <profiles>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <!-- BitCoinJ Nexus for BitCoinJ -->
    <repository>
      <id>bitcoinj-snapshot</id>
      <snapshots/>
      <url>http://nexus.bitcoinj.org/content/repositories/snapshots</url>
    </repository>
    <repository>
      <id>bitcoinj-releases</id>
      <snapshots/>
      <url>http://nexus.bitcoinj.org/content/repositories/releases</url>
    </repository>
    <!-- Provide the latest Spring releases -->
    <repository>
      <id>springframework-milestone</id>
      <url>http://maven.springframework.org/milestone</url>
    </repository>
    <!-- Java.net for Atmosphere and Servlet API -->
    <repository>
      <id>java.net</id>
      <url>http://download.java.net/maven/2/</url>
    </repository>
    <!-- zxing repo -->
    <repository>
      <id>zxing</id>
      <url>http://mvn-adamgent.googlecode.com/svn/maven/release</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <!-- Spring Transactions for JTA -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring Core -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

	  <dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
	  </dependency>
	  
      <!-- Spring Context -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring Beans for bean factory -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring JDBC for direct database queries -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring JPA for ORM -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring OXM for XML/JSON -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring AOP for aspects via annotations -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring Web for general HTTP request handling -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring Web MVC -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring Security (Web, OpenId) -->
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-openid</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-config</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring Social (Twitter, Facebook) -->
      <dependency>
        <groupId>org.springframework.social</groupId>
        <artifactId>spring-social-core</artifactId>
        <version>${spring-social.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.social</groupId>
        <artifactId>spring-social-web</artifactId>
        <version>${spring-social.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.social</groupId>
        <artifactId>spring-social-twitter</artifactId>
        <version>${spring-social.version}</version>
      </dependency>

      <!-- Jackson JSON Mapper -->
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>1.9.2</version>
      </dependency>

      <!-- Hibernate for db -->
      <dependency>
        <groupId>org.hibernate.java-persistence</groupId>
        <artifactId>jpa-api</artifactId>
        <version>2.0-cr-1</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>3.6.10.Final</version>
        <exclusions>
          <exclusion>
            <artifactId>hsqldb</artifactId>
            <groupId>hsqldb</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- SLF4J for logging API -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- Java Commons Logging through SLF4J -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- Logback for implementation -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <!-- Logback for implementation -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <!-- All time handling is through Joda -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>1.6.2</version>
      </dependency>

      <!-- Servlet API (2.5 does not introduce startup delays) -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.5</version>
        <scope>provided</scope>
      </dependency>
      <!-- JSP support -->
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.2</version>
        <scope>provided</scope>
      </dependency>
      <!-- JSTL support -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.2</version>
        <scope>runtime</scope>
      </dependency>

      <!-- JUnit with JMockit, Hamcrest, Spring test, OpenPojo -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>mockit</groupId>
        <artifactId>jmockit</artifactId>
        <version>0.998</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>1.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- CGLIB2 for AOP (ensures main classpath) -->
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>2.2.2</version>
      </dependency>

      <!-- Atmosphere for push broadcast -->
      <dependency>
        <groupId>org.atmosphere</groupId>
        <artifactId>atmosphere-runtime</artifactId>
        <version>0.8.0-RC3</version>
      </dependency>

      <!-- OpenPojo to verify getters/setters -->
      <dependency>
        <groupId>com.googlecode.openpojo</groupId>
        <artifactId>openpojo</artifactId>
        <version>0.3.5</version>
        <scope>test</scope>
      </dependency>

      <!-- BitCoinJ for Bitcoin in the service layer -->
      <dependency>
        <groupId>com.google</groupId>
        <artifactId>bitcoinj</artifactId>
        <version>${bitcoinj.version}</version>
        <!-- TODO This should be optional -->
        <exclusions>
          <exclusion>
            <artifactId>slf4j-jdk14</artifactId>
            <groupId>org.slf4j</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15</artifactId>
        <version>1.46</version>
        <scope>compile</scope>
      </dependency>

      <!-- ZXing (Zebra Crossing) used for Bitcoin swatches -->
      <dependency>
        <groupId>com.google.zxing</groupId>
        <artifactId>javase</artifactId>
        <version>1.6</version>
      </dependency>

      <!-- Findbugs annotations for the avoidance of doubt -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>2.0.1</version>
      </dependency>

      <!-- Dropwizard framework -->
      <!-- Core functionality -->
      <dependency>
        <groupId>com.yammer.dropwizard</groupId>
        <artifactId>dropwizard-core</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <!-- Authentication support -->
      <dependency>
        <groupId>com.yammer.dropwizard</groupId>
        <artifactId>dropwizard-auth</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <!-- Resource testing support -->
      <dependency>
        <groupId>com.yammer.dropwizard</groupId>
        <artifactId>dropwizard-testing</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <!-- HTML Freemarker views support -->
      <dependency>
        <groupId>com.yammer.dropwizard</groupId>
        <artifactId>dropwizard-views</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <!-- REST client support for upstream data -->
      <dependency>
        <groupId>com.yammer.dropwizard</groupId>
        <artifactId>dropwizard-client</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>

      <!-- Jersey core -->
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-core</artifactId>
        <version>1.13</version>
      </dependency>

      <!-- HAL Builder provides resource representation -->
      <dependency>
        <groupId>com.theoryinpractise</groupId>
        <artifactId>halbuilder</artifactId>
        <version>1.0.5</version>
      </dependency>

      <!-- Google Guava for low level utilities -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>13.0</version>
      </dependency>

      <!-- XChange for currency operations -->
      <dependency>
        <groupId>com.xeiam.xchange</groupId>
        <artifactId>xchange-core</artifactId>
        <version>1.4.0</version>
        <!-- TODO XChange should not demand logback -->
        <exclusions>
          <exclusion>
            <artifactId>logback-classic</artifactId>
            <groupId>ch.qos.logback</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.xeiam.xchange</groupId>
        <artifactId>xchange-mtgox</artifactId>
        <version>1.4.0</version>
        <exclusions>
          <exclusion>
            <artifactId>logback-classic</artifactId>
            <groupId>ch.qos.logback</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Jasypt for protecting shared secrets -->
      <dependency>
        <groupId>org.jasypt</groupId>
        <artifactId>jasypt</artifactId>
        <version>1.9.0</version>
      </dependency>

    </dependencies>

  </dependencyManagement>


  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>

        <!-- Careful exclusions of some aspects of the BitCoinJ library (temporary workarounds) -->
        <!-- TODO Consider if this should be removed -->
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <!-- Put bitcoinj classes into target dir for production of the executable jar later -->
            <execution>
              <id>unpack-bitcoinj-classes</id>
              <phase>process-resources</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>com.google</groupId>
                    <artifactId>bitcoinj</artifactId>
                    <version>${bitcoinj.version}</version>
                    <type>jar</type>
                    <overWrite>false</overWrite>
                    <outputDirectory>${basedir}/target/bitcoinj</outputDirectory>
                    <includes>**/*.*</includes>
                    <!-- excludes classes that are duplicated in MBM -->
                    <excludes>**/Peer.class, **/Peer$*.class,**/PeerGroup*.class,
                    **/PendingTransactionListener.class
                    </excludes>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <!-- Standard compile -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- Generate source code JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- General Javadoc JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Handle customised releases -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <mavenExecutorId>forked-path</mavenExecutorId>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <preparationGoals>clean test</preparationGoals>
        </configuration>
      </plugin>

      <!-- Apply Findbugs -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.4.0</version>
        <configuration>
          <skip>true</skip>
          <effort>Max</effort>
          <threshold>Default</threshold>
          <xmlOutput>true</xmlOutput>
          <!--<excludeFilterFile>${basedir}/../findbugs-exclude.xml</excludeFilterFile>-->
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <!-- TODO Activate check -->
              <goal>findbugs</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Keep dependencies up to date -->
      <!-- Use mvn versions:display-dependency-updates versions:display-plugin-updates -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>1.3.1</version>
      </plugin>

      <!-- Generate project site -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <reportPlugins>
            <!-- General info -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.4</version>
              <configuration>
                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
              </configuration>
            </plugin>

            <!-- Javadocs -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.8.1</version>
            </plugin>

            <!-- Findbugs report -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>findbugs-maven-plugin</artifactId>
              <version>2.4.0</version>
            </plugin>

            <!-- Checkstyle report (uses custom ruleset) -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>2.9.1</version>
              <configuration>
                <configLocation>http://codahale.com/checkstyle.xml</configLocation>
                <encoding>UTF-8</encoding>
              </configuration>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
    </plugins>

    <!-- Use Wagon for SSH deployment of signed artifacts -->
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.2</version>
      </extension>
    </extensions>

  </build>

</project>
